using UnityEngine;

public class MovementController : MonoBehaviour
{
    public float speed = 6f; // the movement speed
    public float jumpForce = 10f; // the force applied when jumping
    public float gravity = 20f; // the gravity applied to the character
    public bool isGrounded; // check if the character is on the ground
    public Transform groundCheck; // a transform to check if the character is grounded
    public LayerMask groundMask; // a layer mask to specify what counts as ground

    private CharacterController controller;
    private Vector3 velocity;

    void Start()
    {
        controller = GetComponent<CharacterController>();
    }

    void Update()
    {
        isGrounded = Physics.CheckSphere(groundCheck.position, 0.2f, groundMask);

        if (isGrounded && velocity.y < 0)
        {
            velocity.y = -2f;
        }

        float x = Input.GetAxis("Horizontal");
        float z = Input.GetAxis("Vertical");

        Vector3 move = transform.right * x + transform.forward * z;
        controller.Move(move * speed * Time.deltaTime);

        if (Input.GetButtonDown("Jump") && isGrounded)
        {
            velocity.y = Mathf.Sqrt(jumpForce * -2f * gravity);
        }

        velocity.y -= gravity * Time.deltaTime;
        controller.Move(velocity * Time.deltaTime);
    }
}
