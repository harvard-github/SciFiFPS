using UnityEngine;

public class MovementController : MonoBehaviour
{
    // ...

    private void Update()
    {
        // Call the methods that handle movement and other functionality
        HandleMovement();
        HandleShooting();
        // Add other methods as needed
    }

    private void HandleMovement()
    {
        // Check if the character is on the ground
        isGrounded = Physics.CheckSphere(transform.position, groundCheckDistance, groundMask);

        // Reset velocity when grounded
        if (isGrounded && velocity.y < 0)
        {
            velocity.y = -2f;
        }

        // Get movement input
        float horizontal = Input.GetAxisRaw("Horizontal");
        float vertical = Input.GetAxisRaw("Vertical");
        Vector3 move = transform.right * horizontal + transform.forward * vertical;

        // Move the character
        float speed = Input.GetKey(KeyCode.LeftShift) ? runSpeed : walkSpeed;
        controller.Move(move.normalized * speed * Time.deltaTime);

        // Jump if the character is on the ground
        if (Input.GetButtonDown("Jump") && isGrounded)
        {
            velocity.y = Mathf.Sqrt(jumpForce * -2f * gravity);
        }

        // Apply gravity to the character
        velocity.y -= gravity * Time.deltaTime;
        controller.Move(velocity * Time.deltaTime);
    }

    private void HandleShooting()
    {
        // Add code to handle shooting here
    }
}
